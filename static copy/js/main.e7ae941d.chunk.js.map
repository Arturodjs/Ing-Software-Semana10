{"version":3,"sources":["Components/PokemonCard/index.js","Components/PokemonInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["index","props","id","name","url","getPokemonData","tabIndex","pokemonImg","className","alt","src","onClick","e","target","blur","closePopUp","pokemonData","img","bool","class","stats","map","el","key","stat","toUpperCase","role","style","width","base_stat","aria-valuemax","types","is_hidden","type","slice","abilities","ability","height","weight","App","useState","pokemon","setPokemon","allPokemon","setAllPokemon","setPokemonData","pokemonName","setPokemonName","setPokemonImg","pokemonPopUp","setPokemonPopUp","useEffect","getPokemon","fetch","then","resp","json","results","catch","err","console","error","onChange","value","filter","includes","toLowerCase","placeholder","split","charAt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7ae941d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function index(props) {\r\n    const { id, name, url, getPokemonData, tabIndex } = props;\r\n    const pokemonImg = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`\r\n    return (\r\n        <>\r\n            <div className=\"d-flex flex-column align-items-center pokemon-card\">\r\n                <img alt='' className=\"img-fluid rounded bg-light\" src={pokemonImg} />\r\n                <p>{name}</p>\r\n                <button tabIndex={tabIndex} onClick={(e) => {\r\n                    e.target.blur();\r\n                    getPokemonData(url, name, pokemonImg)\r\n                }\r\n                } className='btn btn btn-outline-pokemon'>See More...</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function index(props) {\r\n    const { closePopUp, pokemonData, name, img } = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"backdrop\" onClick={() => closePopUp(bool => bool = false)}></div>\r\n            <div className=\"infoPokemon container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6 mt-1 d-flex flex-column justify-content-center aling-items-center\">\r\n                        <img src={img} alt=\"\" className='img-fluid align-self-center' />\r\n                        <p className='poke-name'>{name}</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6  d-flex align-items-center\">\r\n                        <div class=\"row justify-content-center text-dark  d-flex align-items-center w-100\">\r\n                            <div class=\"col-12 \">\r\n                                {pokemonData.stats.map((el, key) => {\r\n                                    return (\r\n                                        <>\r\n                                            <p className='stat-name' key={key}>\r\n                                                {el.stat.name.toUpperCase()}\r\n                                            </p>\r\n\r\n                                            <div class=\"progress\" key={key}>\r\n                                                <div class=\"progress-bar bg-success text-dark font-weight-bold text-white\" role=\"progressbar\" style={{ width: `${(el.base_stat * 100) / 160}%` }} aria-valuemax=\"100\">{el.base_stat}</div>\r\n                                            </div>\r\n                                        </>)\r\n                                })}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-none d-sm-block col-sm-12\">\r\n                        <fieldset className=\"row mx-2\">\r\n                            <legend>Other Information</legend>\r\n                            <div className=\"col-6\">\r\n                                <p className='m-0 ms-1'>Type(s): <span>{`${pokemonData.types.map((el, key) => !el.is_hidden ? `${el.type.name}` : '')}`.slice(0)}</span></p>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <p className='m-0 ms-1'>Abilities: <span>{`${pokemonData.abilities.map((el, key) => !el.is_hidden ? `${el.ability.name}` : '')}`.slice(0, -1)}</span></p>\r\n                            </div>\r\n                            <div className=\"offset-6 col-6\">\r\n                                <p className='m-0 ms-1'>Hidden Ability: <span>{`${pokemonData.abilities.map((el, key) => el.is_hidden ? `${el.ability.name}` : null)}`.slice(1)}</span></p>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <p className='m-0 ms-1'>Height: <span>{`${pokemonData.height} M.`.slice(1)}</span></p>\r\n                            </div>\r\n                            <div className=\" col-6\">\r\n                                <p className='m-0 ms-1'>Weight: <span>{`${pokemonData.weight} LBS.`.slice(1)}</span></p>\r\n                            </div>\r\n\r\n                        </fieldset>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css'\nimport './App.scss';\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport PokemonCard from './Components/PokemonCard'\nimport PokemonInfo from './Components/PokemonInfo'\n\n\nfunction App() {\n  const [pokemon, setPokemon] = useState();\n  const [allPokemon, setAllPokemon] = useState();\n  const [pokemonData, setPokemonData] = useState();\n  const [pokemonName, setPokemonName] = useState('');\n  const [pokemonImg, setPokemonImg] = useState('');\n  const [pokemonPopUp, setPokemonPopUp] = useState(false);\n  useEffect(() => {\n    getPokemon();\n\n  }, [])\n\n  const getPokemon = () => {\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/?offset=0&limit=151`;\n\n    fetch(pokemonUrl)\n      .then(resp => resp.json())\n      .then(json => {\n        setPokemon(json.results)\n        setAllPokemon(json.results)\n      })\n      .catch(err => console.error(err))\n  }\n\n  const filterPokemon = (value) => {\n    if (value === '') {\n      setPokemon(allPokemon)\n    }\n    else {\n      setPokemon(allPokemon.filter(el => el.name.includes(value.toLowerCase())))\n    }\n  }\n\n  const getPokemonData = (url, name, img) => {\n    fetch(url)\n      .then(resp => resp.json())\n      .then(json => {\n        setPokemonData(json)\n        setPokemonName(name)\n        setPokemonImg(img)\n        setPokemonPopUp(true)\n      })\n      .catch(err => console.error(err))\n\n\n  }\n\n  return (\n    <>\n      {\n        pokemonPopUp\n          ? <PokemonInfo\n            closePopUp={setPokemonPopUp}\n            pokemonData={pokemonData}\n            name={pokemonName}\n            img={pokemonImg}\n          /> : null\n      }\n      <div className=\"container-fluid\">\n        <div className=\"row search-row\">\n          <nav className=\"text-center border text-light col-12 d-flex flex-column align-items-center\">\n            <h1 className=\"text-center pokedex-text\">Pokedex</h1>\n            <input type=\"text\" onChange={e => filterPokemon(e.target.value)} className=\"form-control mb-2 search-bar\" id=\"search\" placeholder=\"Buscar pokemon por Nombre.\" />\n          </nav>\n        </div>\n\n\n        <div className=\"d-flex flex-wrap justify-content-around text-center\" id=\"pokedex-container\">\n          {\n            pokemon ? pokemon.map((el, key) => {\n              const id = el.url.split('/');\n              const name = el.name.charAt(0).toUpperCase() + el.name.slice(1)\n\n              return (<PokemonCard key={key} id={id[6]} name={name} url={el.url} getPokemonData={getPokemonData} tabIndex={pokemonPopUp ? -1 : 0} />)\n            }) : null}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}